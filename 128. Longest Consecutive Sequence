128. Longest Consecutive Sequence
https://leetcode.com/problems/longest-consecutive-sequence/

* Given an unsorted array of integers nums, return the length of the longest consecutive elements sequence.
You must write an algorithm that runs in O(n) time.

* Example 1:
Input: nums = [100,4,200,1,3,2]
Output: 4
Explanation: The longest consecutive elements sequence is [1, 2, 3, 4]. Therefore its length is 4.
* Example 2:
Input: nums = [0,3,7,2,5,8,4,6,0,1]
Output: 9

*Constraints:
0 <= nums.length <= 105
-109 <= nums[i] <= 109

/**
step1: iterate over the initial array
sept2: use a Set and check if the node had left neighbors:
  if no left neighbors, set this node as the start of a sequence
*/
class Solution {
  public int longestConsecutive(int[] nums) {
  	if (nums.length == 0) {
        return 0;
    }
    int countMax = 1;
    Set<Integer> hashSet = new HashSet<>();
    for (int n : nums) {
      hashSet.add(n);
    }
    int i = 0;
    while (i < nums.length) {
      if (!hashSet.contains(nums[i] - 1)) { // as the start of a sequence
        int start = nums[i];
        int count = 1;
        while (hashSet.contains(start + 1)) {
          count ++;
          start ++;
        }
        if (count > countMax) {
        countMax = count;
        }
      }
      i ++;
    }
    return countMax;
  }
}

/**
TC: O(2n)
SC: O(n)
*/
