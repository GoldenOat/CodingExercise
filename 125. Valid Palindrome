125. Valid Palindrome
https://leetcode.com/problems/valid-palindrome/

/**
 * A phrase is a palindrome if, after converting all uppercase letters into lowercase letters and removing all non-alphanumeric characters, it reads the same forward and backward. Alphanumeric characters include letters and numbers.
 * Given a string s, return true if it is a palindrome, or false otherwise.
 * Constraints:
 * 1 <= s.length <= 2 * 105
 * s consists only of printable ASCII characters.
 */


/**
 * two pointer
 */

class Solution {
    public boolean isPalindrome(String s) {
    	int i = 0;
    	int j = s.length() - 1;
    	while (i < j) {
    		Character start = s.charAt(i);
    		Character end = s.charAt(j);
    		if (!Character.isLetterOrDigit(start)) {
    			i ++;
    			continue;
    		}
    		if (!Character.isLetterOrDigit(end)) {
    			j --;
    			continue;
    		}
    		if (Character.toLowerCase(start) != Character.toLowerCase(end)) {
    			return false;
    		}
    		i ++;
    		j --;
    	}
    	return true;    
    }
}

/**
 * TC: O(n)
 * SC: O(1)
 */




